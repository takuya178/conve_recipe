<% content_for(:title, t('.title')) %>
<div class="food_create" style="background-color: #F0E5CF;">
  <%= form_with model: @main_sub_form, url: mains_path, html: { class: 'directUpload', data: { 'form-data' => (@s3_direct_post.fields), 'url' => @s3_direct_post.url, 'host' => URI.parse(@s3_direct_post.url).host } } do |main| %>
    <div class="container">
    <div class="food_create_inner d-md-flex justify-content-center">
      <div class="food_create_main">
          <h2 class="food_create_title">メイン</h2>
          <div class="food_create_form_box p-4">
          <% if @mains.nil? %>
            <div class="food_create_row row">
              <%= render 'form_img', main: main %>
            </div>
          <% else %>
          <div class="food_create_select_img text-center">
            <%= render 'shared/active_storage', target: @mains %>
          </div>
            <div class="food_create_row row" style='display: none'>
              <%= render 'form_img', main: main %>
            </div>
            <% end %>
            <%= render 'form', f: main, target: Main, place: 'メイン食品名', component: @mains %>
            <div class="food_create_form">
              <label class="food_create_label">
                <%= main.select :stores, options_for_select(Main.stores_i18n.invert), {prompt: "#{@mains.nil? ? 'コンビニ名を選択' : @mains.stores_i18n}"}, class: "food_create_select", disabled: @mains %>
              </label>
            </div>
            <div class="food_create_form">
              <label class="food_create_label">
                <%= main.select :genre, options_for_select(Main.genres_i18n.invert), {prompt: "#{@mains.nil? ? 'ジャンルを選択' : @mains.genre_i18n}"}, class: "food_create_select", disabled: @mains %>
              </label>
            </div>
          </div>
      </div>
      <div class="food_combi_compo">×</div>
      <div class="food_create_sub">
        <%= main.fields_for :subs do |sub| %>
        <h2 class="food_create_title">プラス一品</h2>
        <div class="food_create_form_box p-4">
          <div class="input-form">
            <div class="food_create_row row">
              <div class="food_create_image_explanation col-lg-4">
                <p>画像形式: JPEG/JPG/PNG</p>
                <p>容量: 5MB以内</p>
              </div>
              <div class="input-form col-lg-8">
                <label class="d-block">
                  <span class="btn p-2 w-100 food_create_img_btn">
                    <i class="fas fa-camera-retro"></i> 画像を選択する
                    <%= sub.file_field :image, class: "form-control", style: "display:none", direct_upload: true %>
                  </span>
                </label>
                <div class="food_create_no_img_box text-center" style="display: block;" id= "js-sub-no-img"><%= image_pack_tag("media/images/noimage.jpg", class: 'food_create_no_img') %></div>
                <div id="js-sub-image" class="text-center"></div>
                <%= render 'shared/error_messages', object: sub.object, text: :image %>
              </div>
            </div>
          </div>
          <%= render 'form', f: sub, target: Sub, place: 'サブ食品名', component: @subs %>
          <div class="food_create_form">
            <label class="food_create_label">
              <%= sub.select :stores, options_for_select(Sub.stores_i18n.invert), {include_blank: 'コンビニ名を選択'}, class: "food_create_select" %>
            </label>
          </div>
        </div>
        <% end %>
      </div>
    </div>
    <%= render 'shared/btn', f: main, text: '組み合わせを登録' %>
  </div>
  <% end %>
</div>

<%= javascript_pack_tag 'home/preview' %>


<script type="text/javascript">
$(function() {
  $('.directUpload').find("input:file").each(function(i, elem) {
    var fileInput    = $(elem);
    var form         = $(fileInput.parents('form:first'));
    var submitButton = form.find('input[type="submit"]');
    var progressBar  = $("<div class='bar'></div>");
    var barContainer = $("<div class='progress'></div>").append(progressBar);
    fileInput.after(barContainer);
    fileInput.fileupload({
      fileInput:       fileInput,
      url:             form.data('url'),
      type:            'POST',
      autoUpload:       true,
      formData:         form.data('form-data'),
      paramName:        'file', // S3 does not like nested name fields i.e. name="user[avatar_url]"
      dataType:         'XML',  // S3 returns XML if success_action_status is set to 201
      replaceFileInput: false,
      progressall: function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        progressBar.css('width', progress + '%')
      },
      start: function (e) {
        submitButton.prop('disabled', true);

        progressBar.
          css('background', 'green').
          css('display', 'block').
          css('width', '0%').
          text("Loading...");
      },
      done: function(e, data) {
        submitButton.prop('disabled', false);
        progressBar.text("Uploading done");

        // extract key and generate URL from response
        var key   = $(data.jqXHR.responseXML).find("Key").text();
        var url   = '//' + form.data('host') + '/' + key;

        // create hidden field
        var input = $("<input />", { type:'hidden', name: fileInput.attr('name'), value: url })
        form.append(input);
      },
      fail: function(e, data) {
        submitButton.prop('disabled', false);

        progressBar.
          css("background", "red").
          text("Failed");
      }
    });
  });
});
</script>




